apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 3
  serviceName: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      serviceAccountName: spilo
      # securityContext:
      #   runAsUser: 101
        # readOnlyRootFilesystem: true
        # allowPrivilegeEscalation: false

      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: postgres
              topologyKey: kubernetes.io/hostname
              
      containers:
      - name: spilo 
        image: registry.opensource.zalan.do/acid/spilo-10:latest        
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 8008
            protocol: TCP
          - containerPort: 5432
            protocol: TCP
        volumeMounts:
          - mountPath: /home/postgres/pgdata
            name: pgdata
        envFrom:
          - secretRef:
              name: postgres
          - configMapRef:
              name: postgres
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP   

          - name: PATRONI_KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
                
          - name: PATRONI_KUBERNETES_USE_ENDPOINTS
            value: 'true'
            
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
      
          - name: SCOPE
            value: $(CLUSTER_NAME)

          - name: PATRONI_KUBERNETES_ROLE_LABEL
            value: role

          - name: PATRONI_KUBERNETES_LABELS
            value: '{app: postgres, cluster-name: $(CLUSTER_NAME)}'
                
      initContainers:
        - name: init-perms
          image: registry.opensource.zalan.do/acid/spilo-10:latest
          command: ['sh', '-c']
          args:
            - mkdir -p $PGROOT && chown postgres:postgres $PGROOT && chmod 0700 $PGROOT && 
              mkdir -p $PGDATA && chown postgres:postgres $PGDATA && chmod 0700 $PGDATA && 
              mkdir -p $PGLOG && chown postgres:postgres $PGLOG && chmod 0700 $PGLOG
            
          securityContext:
            runAsUser: 0
          volumeMounts:
          - mountPath: /home/postgres/pgdata
            name: pgdata
      terminationGracePeriodSeconds: 1

  volumeClaimTemplates:
    - metadata:
        name: pgdata
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

